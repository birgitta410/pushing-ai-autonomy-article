plugins {
	id 'java'
	id 'org.springframework.boot' version '3.5.3'
	id 'io.spring.dependency-management' version '1.1.7'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(21)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

// E2E Test Configuration
sourceSets {
	e2e {
		java.srcDir file('src/e2e/java')
		resources.srcDir file('src/e2e/resources')
		compileClasspath += sourceSets.test.runtimeClasspath
		runtimeClasspath += sourceSets.test.runtimeClasspath
	}
}

configurations {
	e2eImplementation.extendsFrom testImplementation
	e2eRuntimeOnly.extendsFrom testRuntimeOnly
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	compileOnly 'org.projectlombok:lombok'
	runtimeOnly 'com.h2database:h2'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
	
	// Karate dependencies for e2e tests
	e2eImplementation 'com.intuit.karate:karate-junit5:1.4.1'
}

tasks.named('test') {
	useJUnitPlatform()
}

task e2eTest(type: Test) {
	description = 'Runs end-to-end tests'
	group = 'verification'
	testClassesDirs = sourceSets.e2e.output.classesDirs
	classpath = sourceSets.e2e.runtimeClasspath
	useJUnitPlatform()
}

task e2e {
	dependsOn e2eTest
	description = 'Alias for e2eTest task'
	group = 'verification'
}
tasks.named('processE2eResources') {
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
}
